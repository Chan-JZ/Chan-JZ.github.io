<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on My blog</title>
    <link>https://chanjz.github.io/tags/java/</link>
    <description>Recent content in Java on My blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 16 Feb 2023 10:08:09 +1030</lastBuildDate><atom:link href="https://chanjz.github.io/tags/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Adelaide CS Community Project</title>
      <link>https://chanjz.github.io/post/java_community_project/</link>
      <pubDate>Thu, 16 Feb 2023 10:08:09 +1030</pubDate>
      
      <guid>https://chanjz.github.io/post/java_community_project/</guid>
      
        <description>&lt;p&gt;When I first knew Garbage Collection Mechanism in Java, I felt it was quite appealing to me, especially for a C++ programmer, because I do not need to worry about the memory leak anymore; therefore I started learning Java in April 2022. On December 22, 2022, I started my Java full-stack project. This post will keep track of my progress of developing this project.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Java commonly used functions</title>
      <link>https://chanjz.github.io/post/java_functions/</link>
      <pubDate>Wed, 15 Feb 2023 10:25:39 +1030</pubDate>
      
      <guid>https://chanjz.github.io/post/java_functions/</guid>
      
        <description>&lt;p&gt;At the Summer of 2022, I converted my main programming language from C++ to Java. This is because some Java&amp;rsquo;s great features are appealing to me and Java is also widely used in software development industry. In this post, I will put some commonly used Java operations for doing leetCode.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Multithreading</title>
      <link>https://chanjz.github.io/post/multithreading/</link>
      <pubDate>Wed, 21 Dec 2022 20:34:16 +1030</pubDate>
      
      <guid>https://chanjz.github.io/post/multithreading/</guid>
      
        <description>&lt;p&gt;In computer architecture, multithreading is the ability of a central processing unit (CPU) (or a single core in a multi-core processor) to provide multiple threads of execution concurrently, supported by the operating system. In this post, I will talk about multithreading in Java.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Java Exception</title>
      <link>https://chanjz.github.io/post/java_exception/</link>
      <pubDate>Wed, 21 Dec 2022 13:42:12 +1030</pubDate>
      
      <guid>https://chanjz.github.io/post/java_exception/</guid>
      
        <description>&lt;p&gt;Exception mechanism helps developers find issues of their programs. Its base class is java.lang.Throwable which consists of java.lang.Error and java.lang.Exception. In this post, I will talk about five keywords about Java exception, how to catch multiple exceptions and demonstrate how to define our own exception class.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Java Map</title>
      <link>https://chanjz.github.io/post/java_map/</link>
      <pubDate>Sat, 03 Dec 2022 14:04:26 +1030</pubDate>
      
      <guid>https://chanjz.github.io/post/java_map/</guid>
      
        <description>&lt;p&gt;In this post, I will introduce HashMap, LinkedHashMap and Hashtable in Java as well as their corresponding methods.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Java Set</title>
      <link>https://chanjz.github.io/post/java_set/</link>
      <pubDate>Fri, 02 Dec 2022 12:34:15 +1030</pubDate>
      
      <guid>https://chanjz.github.io/post/java_set/</guid>
      
        <description>&lt;p&gt;In this post, I will introduce HashSet and LinkedHashSet in Java as well as their corresponding methods.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Java Generic Programming</title>
      <link>https://chanjz.github.io/post/java_generic_programming/</link>
      <pubDate>Sun, 20 Nov 2022 14:16:22 +1030</pubDate>
      
      <guid>https://chanjz.github.io/post/java_generic_programming/</guid>
      
        <description>&lt;p&gt;In this post, I will introduce generic programming in Java and talk about how to define and use generic class, generic method, generic interface and generic wildcard.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Java Iterator</title>
      <link>https://chanjz.github.io/post/java_iterator/</link>
      <pubDate>Sat, 19 Nov 2022 17:24:33 +1030</pubDate>
      
      <guid>https://chanjz.github.io/post/java_iterator/</guid>
      
        <description>&lt;p&gt;In this post, I will talk about Java iterator which is a powerful tool for us to traverse elements. In addition, enhanced for loop will also be introduced which can simplify the code for element traversal.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Java Collection</title>
      <link>https://chanjz.github.io/post/java_collection/</link>
      <pubDate>Sat, 19 Nov 2022 00:00:00 +0800</pubDate>
      
      <guid>https://chanjz.github.io/post/java_collection/</guid>
      
        <description>&lt;p&gt;In this post, I will talk about Java collection. Some well-known containers such as ArrayList, TreeSet are implementing classes of their respective interfaces which inherit from the collection interface. Therefore, it is a good idea to learn methods from the collection interface because all of its derived implementing classes will acquire the same methods.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Java Predefined Class</title>
      <link>https://chanjz.github.io/post/java_predefined_class/</link>
      <pubDate>Fri, 18 Nov 2022 13:59:38 +1030</pubDate>
      
      <guid>https://chanjz.github.io/post/java_predefined_class/</guid>
      
        <description>&lt;p&gt;In this post, I will talk about some predefined classes as well as commonly used APIs in Java. The post will cover object class, date class, date format class, calendar class, system class, string builder class and wrapper class. In addition, I will demonstrate some methods of those classes and show some examples.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Java Inner Class</title>
      <link>https://chanjz.github.io/post/java_innerclass/</link>
      <pubDate>Thu, 17 Nov 2022 17:24:33 +1030</pubDate>
      
      <guid>https://chanjz.github.io/post/java_innerclass/</guid>
      
        <description>&lt;p&gt;If an object contains another object, then this means that a class includes another class. For example, the relationship between cars and engines. In this case, the engine class is called an inner class. In this post, I will explore the properties of three types of inner classes (Member Inner Class / Local Inner Class / Anonymous Inner Class).&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>&#39;Final&#39; keyword in Java</title>
      <link>https://chanjz.github.io/post/java_final/</link>
      <pubDate>Thu, 17 Nov 2022 00:00:00 +0800</pubDate>
      
      <guid>https://chanjz.github.io/post/java_final/</guid>
      
        <description>&lt;p&gt;&amp;lsquo;Final&amp;rsquo; keyword represents &amp;lsquo;ultimate&amp;rsquo; and &amp;lsquo;unchangeable&amp;rsquo;. In this post, I will talk about four usages of the &amp;lsquo;final&amp;rsquo; keyword, including modifying a class, a method, local variables (basic and reference types) and a member variable.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Java Polymorphism</title>
      <link>https://chanjz.github.io/post/java_polymorphism/</link>
      <pubDate>Thu, 17 Nov 2022 00:00:00 +0800</pubDate>
      
      <guid>https://chanjz.github.io/post/java_polymorphism/</guid>
      
        <description>&lt;p&gt;In this post, I will talk about the concepts and benefits of polymorphism. Then, I will point out some important properties about using class variables and methods when polymorphism happens. Moving on, object down casting and &amp;lsquo;instanceof&amp;rsquo; method will be briefly introduced. Finally, I will demonstrate a case study combining the knowledge of using interface and polymorphism.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Java Interface</title>
      <link>https://chanjz.github.io/post/java_interface/</link>
      <pubDate>Sun, 13 Nov 2022 19:53:11 +1030</pubDate>
      
      <guid>https://chanjz.github.io/post/java_interface/</guid>
      
        <description>&lt;p&gt;An interface is a reference type in Java. It is similar to class. It is a collection of abstract methods. A class implements an interface, thereby inheriting the abstract methods of the interface. Along with abstract methods, an interface may also contain constants, default methods, static methods, and nested types (TutorialsPoint 2022).&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>