<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43; on My blog</title>
    <link>https://chanjz.github.io/tags/c&#43;&#43;/</link>
    <description>Recent content in C&#43;&#43; on My blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 23 Feb 2023 10:07:43 +1030</lastBuildDate><atom:link href="https://chanjz.github.io/tags/c++/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Linux Project</title>
      <link>https://chanjz.github.io/post/linuxproject/</link>
      <pubDate>Thu, 23 Feb 2023 10:07:43 +1030</pubDate>
      
      <guid>https://chanjz.github.io/post/linuxproject/</guid>
      
        <description>&lt;p&gt;In this post, I will put some C++, linux, computer networking and computer architecture concepts and theories. In addition, I will also do a Linux high-concurrency web server project in the end to consolidate these knowledge.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>C&#43;&#43; Revision</title>
      <link>https://chanjz.github.io/post/c&#43;&#43;_revision/</link>
      <pubDate>Tue, 24 Jan 2023 15:25:06 +1030</pubDate>
      
      <guid>https://chanjz.github.io/post/c&#43;&#43;_revision/</guid>
      
        <description>In this post, I will quickly go through some concepts and basic STL operations of C++.</description>
      
    </item>
    
    <item>
      <title>Smart Pointers in C&#43;&#43;</title>
      <link>https://chanjz.github.io/post/smart_pointer/</link>
      <pubDate>Sat, 05 Feb 2022 00:00:00 +0800</pubDate>
      
      <guid>https://chanjz.github.io/post/smart_pointer/</guid>
      
        <description>&lt;p&gt;在C++中，动态内存的管理依赖于 new 和 delete 关键字。当程序员想要在堆(heap)上为对象分配空间并返回一个指向该对象的指针时，可以使用 new 关键字进行，同时也可以利用该类的构造函数(constructor)对其进行初始化(initialization)。当动态对象不再需要被使用时，我们可以使用 delete 关键字销毁该对象，并释放与之关联的内存。使用动态内存容易造成错误，当我们忘记释放内存或者不小心丢失了指向该内存的指针时，&lt;a href=&#34;https://baike.baidu.com/item/%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F/6181425&#34;&gt;内存泄漏(memory leak)&lt;/a&gt;便会发生。为了更加方便地使用和管理动态内存，基于类模版的智能指针便应运而生。顾名思义，智能指针的行为类似于常规指针，但其可以智能地释放所指向的对象，避免造成内存泄漏。&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>